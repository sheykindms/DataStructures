
1) Прояснение
+4 because in our tests we need to put four elements into HashTable so the min capacity of ht should be at least 4
//Комментарий, обосновывающий magic number в методе setUp класса HashTableTest, при создании рандомного капасити структуры.
2) Прояснение
/*
In the loop, we want to either find an already existing value or find a place to add a value.
We iterate over the array, adding a value equal to step at each iteration to foundIndex value.
When we reach the end of the array, we go back to the beginning and run with the same step until
he number of iterations is >= step. This is how we ensure optimal coverage of the entire array.
*/
//Многострочный комментарий, раскрывающий магию внутреннего метода seekSlot, класса HashTable.
3) Прояснение
* i.e. "())(" is not balanced, but "(()((())()))" is balanced
//Добавлены примеры в javadoc комментарии метода isBalanced класса BraceBalancer.
4) Прояснение
* i.e. : "1 2 + 3 *" should be 9
*        "8 2 + 5 * 9 +" should be 59
//Добавлены примеры в javadoc комментарии метода calculate класса PostfixExpressionCalculator
5) Прояснение
//concat the current elements into a number as long as the next character exists and it is a digit
//Описан смысл вложенного цикла метода calculate класса PostfixExpressionCalculator.
6) Прояснение
//Parse the string by adding elements to a common stack
//Объясняется смысл использования стека и след. цикла в методе calculate класса PostfixExpressionCalculator.
7) Прояснение
/*
If the operand - we put it on the stack for operands, if the operator - we use the "processResult"
method for the last two elements in the operand stack and put the result back on the operand stack
*/
//Объясняется порядок и принцип вычисления значения.
//По этому и предыдущему комментариям можно понять всю логику вычисления постфиксного выражения в классе
//PostfixExpressionCalculator.
8) Прояснение
//If the string length is even, iterate until the stack size equals 0, if the length is odd - to 1.
//Объясняется как мы итерируемся, разбирая стек в методе isPalindrome класса BraceBalancer.
